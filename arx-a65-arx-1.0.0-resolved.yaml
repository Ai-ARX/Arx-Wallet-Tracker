openapi: 3.0.3
info:
  title: ARX TRACK API
  description: |
    Advanced API for ARX TRACK ecosystem - AI-powered Web3 wallet tracking platform providing real-time signals,
    automated trading execution, and deep blockchain analytics. Features include multi-chain support, predictive
    modeling, risk assessment, and portfolio optimization tools.
  license:
    name: Proprietary
    url: https://arxtrack.fun/terms
  contact:
    name: ARX TRACK Development Team
    email: api-support@arxtrack.fun
    url: https://arxtrack.fun/docs
  version: 2.3.0
servers:
- url: https://api.arxtrack.fun/v2
  description: Production API
- url: https://staging-api.arxtrack.fun/v2
  description: Staging Environment
- url: https://sandbox-api.arxtrack.fun/v2
  description: Sandbox (Testing)
- url: https://api.eu.arxtrack.fun/v2
  description: European Region
externalDocs:
  description: ARX TRACK API Documentation
  url: https://docs.arxtrack.fun/api

tags:
- name: Authentication
  description: Endpoints for API key management and authentication
- name: Wallets
  description: Wallet profiling, tracking, and on-chain analytics
- name: Signals
  description: AI-generated trading signals and market intelligence
- name: Automation
  description: Rules engine for automated trading strategies
- name: AI
  description: Advanced AI analysis and predictive modeling
- name: Portfolio
  description: Portfolio management and optimization tools
- name: Alerts
  description: Real-time monitoring and notification system
- name: Market
  description: Market data and liquidity analysis
- name: Institutional
  description: Enterprise-grade features for institutional clients

paths:
  /auth/key:
    post:
      tags: [Authentication]
      summary: Generate API key
      description: Create a new API key with specified permissions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiKeyRequest"
      responses:
        "201":
          description: API key generated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiKeyResponse"
        "403":
          description: Permission denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /wallets/{chain}/{address}:
    get:
      tags: [Wallets]
      summary: Get comprehensive wallet profile
      description: Retrieve complete wallet information including balances, transactions, and AI analysis
      parameters:
      - $ref: "#/components/parameters/chainParam"
      - $ref: "#/components/parameters/addressParam"
      - name: extended
        in: query
        description: Include extended data (transactions, NFTs, etc.)
        schema:
          type: boolean
          default: false
      - name: refresh
        in: query
        description: Force fresh data refresh
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Wallet data retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WalletProfile"
        "404":
          $ref: "#/components/responses/NotFound"

  /wallets/batch:
    post:
      tags: [Wallets]
      summary: Batch wallet lookup
      description: Get data for multiple wallets in a single request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchWalletRequest"
      responses:
        "200":
          description: Batch results returned
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchWalletResponse"

  /signals/live:
    get:
      tags: [Signals]
      summary: Subscribe to live signal stream
      description: WebSocket endpoint for real-time trading signals
      parameters:
      - name: chains
        in: query
        description: Filter by blockchain networks
        schema:
          type: array
          items:
            type: string
      - name: minConfidence
        in: query
        description: Minimum confidence threshold (0.0-1.0)
        schema:
          type: number
          default: 0.7
      responses:
        "101":
          description: Switching to WebSocket protocol

  /signals/historical:
    get:
      tags: [Signals]
      summary: Retrieve historical signals
      description: Get past signals with filtering capabilities
      parameters:
      - $ref: "#/components/parameters/timeRangeStart"
      - $ref: "#/components/parameters/timeRangeEnd"
      - name: signalType
        in: query
        description: Filter by signal type
        schema:
          type: string
          enum: [BUY, SELL, LIQUIDITY_IN, LIQUIDITY_OUT, WARNING]
      responses:
        "200":
          description: Historical signals retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HistoricalSignals"

  /automation/strategies:
    get:
      tags: [Automation]
      summary: List available strategies
      description: Get pre-built automated trading strategies
      responses:
        "200":
          description: Strategy list returned
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StrategyList"

    post:
      tags: [Automation]
      summary: Create custom strategy
      description: Define a new automated trading strategy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StrategyDefinition"
      responses:
        "201":
          description: Strategy created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StrategyResponse"

  /automation/executions:
    get:
      tags: [Automation]
      summary: Get strategy executions
      description: View historical executions of automated strategies
      parameters:
      - $ref: "#/components/parameters/paginationLimit"
      - $ref: "#/components/parameters/paginationOffset"
      responses:
        "200":
          description: Executions retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExecutionHistory"

  /ai/simulate:
    post:
      tags: [AI]
      summary: Run trading simulation
      description: Execute backtesting simulation with historical data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SimulationRequest"
      responses:
        "200":
          description: Simulation results
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimulationResult"

  /ai/predict:
    post:
      tags: [AI]
      summary: Get price prediction
      description: Request AI-powered price prediction for tokens
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PredictionRequest"
      responses:
        "200":
          description: Prediction results
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PredictionResponse"

  /portfolio/analyze:
    post:
      tags: [Portfolio]
      summary: Analyze portfolio
      description: Comprehensive portfolio risk and performance analysis
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PortfolioAnalysisRequest"
      responses:
        "200":
          description: Analysis completed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PortfolioAnalysis"

  /alerts/watch:
    post:
      tags: [Alerts]
      summary: Create alert rule
      description: Set up custom alert conditions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AlertRule"
      responses:
        "201":
          description: Alert created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertResponse"

  /market/liquidity:
    get:
      tags: [Market]
      summary: Get liquidity data
      description: Retrieve liquidity metrics for tokens
      parameters:
      - name: tokens
        in: query
        required: true
        description: Comma-separated list of token symbols
        schema:
          type: string
      responses:
        "200":
          description: Liquidity data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LiquidityData"

  /institutional/vault:
    post:
      tags: [Institutional]
      summary: Create managed vault
      description: Enterprise-grade managed investment vault
      security:
      - InstitutionalApiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VaultCreation"
      responses:
        "201":
          description: Vault created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VaultResponse"

components:
  schemas:
    ApiKeyRequest:
      type: object
      properties:
        name:
          type: string
          description: Key identifier
        permissions:
          type: array
          items:
            type: string
            enum: [READ, WRITE, TRADE, ADMIN]
        expiresAt:
          type: string
          format: date-time
          description: Optional expiration date
      required: [name, permissions]

    ApiKeyResponse:
      type: object
      properties:
        key:
          type: string
          description: Generated API key
        secret:
          type: string
          description: Secret for key verification
        createdAt:
          type: string
          format: date-time

    WalletProfile:
      type: object
      properties:
        address:
          type: string
        chain:
          type: string
        firstSeen:
          type: string
          format: date-time
        lastActivity:
          type: string
          format: date-time
        reputationScore:
          type: number
          minimum: 0
          maximum: 100
        riskAssessment:
          $ref: "#/components/schemas/RiskProfile"
        balances:
          type: array
          items:
            $ref: "#/components/schemas/TokenBalance"
        transactions:
          type: array
          items:
            $ref: "#/components/schemas/Transaction"
        nfts:
          type: array
          items:
            $ref: "#/components/schemas/NFT"
        aiInsights:
          type: array
          items:
            type: string
          description: AI-generated insights about wallet behavior

    RiskProfile:
      type: object
      properties:
        level:
          type: string
          enum: [LOW, MEDIUM, HIGH, EXTREME]
        factors:
          type: array
          items:
            type: string
          description: Risk contributing factors
        confidence:
          type: number
          format: float
          minimum: 0
          maximum: 1

    TokenBalance:
      type: object
      properties:
        token:
          type: string
        symbol:
          type: string
        amount:
          type: number
        valueUSD:
          type: number
        priceChange24h:
          type: number
          description: Percentage change

    Transaction:
      type: object
      properties:
        hash:
          type: string
        timestamp:
          type: string
          format: date-time
        type:
          type: string
        value:
          type: number
        counterparties:
          type: array
          items:
            type: string

    NFT:
      type: object
      properties:
        contract:
          type: string
        tokenId:
          type: string
        name:
          type: string
        valueEstimate:
          type: number

    BatchWalletRequest:
      type: object
      properties:
        wallets:
          type: array
          items:
            type: object
            properties:
              chain:
                type: string
              address:
                type: string
          minItems: 1
          maxItems: 50
        options:
          type: object
          properties:
            includeBalances:
              type: boolean
            includeTxns:
              type: boolean
            includeNFTs:
              type: boolean

    BatchWalletResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: "#/components/schemas/WalletProfile"
        errors:
          type: array
          items:
            type: object
            properties:
              address:
                type: string
              error:
                type: string

    HistoricalSignals:
      type: object
      properties:
        signals:
          type: array
          items:
            $ref: "#/components/schemas/Signal"
        pagination:
          $ref: "#/components/schemas/Pagination"

    Signal:
      type: object
      properties:
        id:
          type: string
        timestamp:
          type: string
          format: date-time
        type:
          type: string
        token:
          type: string
        chain:
          type: string
        confidence:
          type: number
        expectedImpact:
          type: number
          description: Expected price impact percentage
        rationale:
          type: string
          description: AI explanation for signal

    StrategyDefinition:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        triggers:
          type: array
          items:
            $ref: "#/components/schemas/TriggerCondition"
        actions:
          type: array
          items:
            $ref: "#/components/schemas/TradeAction"
        riskParameters:
          $ref: "#/components/schemas/RiskParameters"

    TriggerCondition:
      type: object
      properties:
        type:
          type: string
          enum: [PRICE, VOLUME, WALLET_ACTIVITY, MARKET_CAP, SOCIAL_TREND]
        parameters:
          type: object

    TradeAction:
      type: object
      properties:
        type:
          type: string
          enum: [BUY, SELL, SWAP, STAKE, BRIDGE]
        token:
          type: string
        amount:
          type: number
        slippage:
          type: number

    RiskParameters:
      type: object
      properties:
        maxExposure:
          type: number
        stopLoss:
          type: number
        takeProfit:
          type: number
        cooldown:
          type: number
          description: Minutes between executions

    SimulationRequest:
      type: object
      properties:
        strategy:
          $ref: "#/components/schemas/StrategyDefinition"
        timeframe:
          $ref: "#/components/schemas/TimeRange"
        initialCapital:
          type: number
        assets:
          type: array
          items:
            type: string

    SimulationResult:
      type: object
      properties:
        performance:
          type: number
          description: Percentage return
        trades:
          type: array
          items:
            $ref: "#/components/schemas/SimulatedTrade"
        metrics:
          $ref: "#/components/schemas/PerformanceMetrics"

    PerformanceMetrics:
      type: object
      properties:
        sharpeRatio:
          type: number
        maxDrawdown:
          type: number
        winRate:
          type: number

    PortfolioAnalysisRequest:
      type: object
      properties:
        wallets:
          type: array
          items:
            type: object
            properties:
              chain:
                type: string
              address:
                type: string
        options:
          type: object
          properties:
            riskModel:
              type: string
            timeHorizon:
              type: string

    PortfolioAnalysis:
      type: object
      properties:
        diversificationScore:
          type: number
        riskAssessment:
          $ref: "#/components/schemas/RiskProfile"
        recommendedAdjustments:
          type: array
          items:
            $ref: "#/components/schemas/PortfolioAdjustment"

    PortfolioAdjustment:
      type: object
      properties:
        action:
          type: string
        token:
          type: string
        amount:
          type: number
        rationale:
          type: string

    VaultCreation:
      type: object
      properties:
        name:
          type: string
        strategy:
          type: string
        investors:
          type: array
          items:
            type: string
        terms:
          $ref: "#/components/schemas/VaultTerms"

    VaultTerms:
      type: object
      properties:
        managementFee:
          type: number
        performanceFee:
          type: number
        lockupPeriod:
          type: number
        minInvestment:
          type: number

  parameters:
    chainParam:
      name: chain
      in: path
      description: Blockchain network identifier
      required: true
      schema:
        type: string
        enum: [solana, ethereum, polygon, arbitrum, avalanche, bsc]

    addressParam:
      name: address
      in: path
      description: Wallet public address
      required: true
      schema:
        type: string
        pattern: '^0x[a-fA-F0-9]{40}$|^[1-9A-HJ-NP-Za-km-z]{32,44}$'

    timeRangeStart:
      name: start
      in: query
      description: Start timestamp for historical data
      required: true
      schema:
        type: string
        format: date-time

    timeRangeEnd:
      name: end
      in: query
      description: End timestamp for historical data
      schema:
        type: string
        format: date-time

    paginationLimit:
      name: limit
      in: query
      description: Number of items per page
      schema:
        type: integer
        default: 20
        maximum: 100

    paginationOffset:
      name: offset
      in: query
      description: Pagination offset
      schema:
        type: integer
        default: 0

  responses:
    NotFound:
      description: The requested resource was not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: string

  securitySchemes:
    ApiKey:
      type: apiKey
      in: header
      name: X-API-KEY
    InstitutionalApiKey:
      type: apiKey
      in: header
      name: X-INSTITUTIONAL-KEY
      description: Special key for enterprise features
